{
  "name": "php-getters-setters",
  "main": "./lib/my-package",
  "version": "0.2.0",
  "description": "generate getters and setters for your php class",
  "repository": {
    "type": "git",
    "url": "https://github.com/francodacosta/atom-php-getters-setters"
  },
  "license": "MIT",
  "engines": {
    "atom": ">0.50.0"
  },
  "dependencies": {},
  "activationEvents": [
    "php-getters-setters:allGettersSetter",
    "php-getters-setters:allGetters",
    "php-getters-setters:allSetters",
    "php-getters-setters:showUI",
    "php-getters-setters:newPropery"
  ],
  "readme": "PHP Getters and Setters\n=======================\n\nWith PHP Getters and Setters you can automatically generate _Getters_ and _Setters_ for your php classes.\n\nThe code produced is PSR compatible\n\nFeatures:\n---------\n\n* Generate Getters, Setters or Both\n* Select all variables or just some via UI\n* Control method scope via a DocBlock tag\n* intelligent guessing of variable names, if you use descriptive variable names you do not need to provide a description, the method comment will set accordingly\n* supports _ in property names\n\n\n\n**Example PHP Code**\n\n\n```php\nclass test\n{\n    /**\n     * foo container\n     *\n     * @var AbcClass\n     */\n    private $foo;\n}\n```\n\n**Example class after generating Getters and Setters**\n\n```php\nclass test\n{\n    /**\n     * foo container\n     *\n     * @var AbcClass\n     */\n    private $foo;\n\n    /**\n     * Gets the foo container.\n     *\n     * @return AbcClass\n     */\n    public function getFoo()\n    {\n        return $this->foo;\n    }\n\n    /**\n     * Sets the foo container.\n     *\n     * @param AbcClass $foo the foo\n     *\n     * @return self\n     */\n    public function setFoo(AbcClass $foo)\n    {\n        $this->foo = $foo;\n\n        return $this;\n    }\n}\n```\n\nAs you can see if get to trouble of commenting your variables, the generated functions can be used without modification.\n\nThis is an huge time saver!\n\nSpecial DocBlock tags\n---------------------\n__@internal__: getter and setter will be private\n\n__@private__: getter and setter will be private\n\n__@protected__: getter and setter will be protected\n\n__@read-only private|protected__: getter will be public, setter will be private or protected (defaults to private)\n\nSettings:\n-----------\n__doNotTypeHint__: an array of items that when present in *@type* or *@var* declarations are ignored and not used as type hint\n\n__camelCasedMethodNames__: method names will follow PSR rules\nPSR states that all method names must be camel cased, if set to false method names won't be Camel Cased\n\n__getterTemplate__: the template for the getter\n\n__setterTemplate__: the template for the setter\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/francodacosta/atom-php-getters-setters/issues"
  },
  "homepage": "https://github.com/francodacosta/atom-php-getters-setters",
  "_id": "php-getters-setters@0.2.0",
  "dist": {
    "shasum": "782cec9e00b1e18d39d59ad7e4f2ef2e34de46b2"
  },
  "_resolved": "/var/folders/p4/__f0csfn5pn8b7bwgk06zwqh0000gn/T/d-114517-25278-1gantlt/package.tgz",
  "_from": "/var/folders/p4/__f0csfn5pn8b7bwgk06zwqh0000gn/T/d-114517-25278-1gantlt/package.tgz"
}
